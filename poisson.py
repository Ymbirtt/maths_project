from __future__ import division
from random import *
from pylab import *   

def poisson(lambMax, lamb, tmax):
    vs = [0]
    
    v = 0
    u = 0
    
    while v < tmax:
        v = v + expovariate(1/lambMax)
        u = uniform(0,lambMax)
        while u > lamb(v):
            v = v + expovariate(1/lambMax)
            u = uniform(0,lambMax)
            
        vs.append(v)
        
    return vs[:-1]

def plotPoisson(xs):
    "Given a list of values generated by a poisson process, plots them in the canonical way"
	
    ys = [x for x in range(len(xs)) for _ in (0,1)][:-1]
    print ys
    print len(ys)
    
    xs = [xs[0]]+[x for x in xs[1:] for _ in (0,1)]
    print xs
    print len(xs)

    plot(xs,ys)
    show()
	
	
def main():
    xs = poisson(5, lambda x:5, 100)
    print xs
    plotPoisson(xs)
	#plot(xs,range(len(xs)),'o')
	#plot(xs[1:],range(len(xs)-1),'o')
	
	
    
if __name__ == "__main__":
	main()

